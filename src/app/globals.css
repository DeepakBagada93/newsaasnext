@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 30 95% 44%; /* Deep Orange */
    --primary-foreground: 0 0% 98%; /* White text on primary */
    --secondary: 38 92% 51%; /* Yellow-orange */
    --secondary-foreground: 0 0% 10%; /* Dark text on secondary */
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 38 92% 51%; /* Yellow-orange for hovers etc. */
    --accent-foreground: 0 0% 10%; /* Dark text on accent */
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 30 95% 44%; /* Primary color for focus rings */
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 240 5.3% 26.1%;
    --sidebar-primary: 240 5.9% 10%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 240 4.8% 95.9%;
    --sidebar-accent-foreground: 240 5.9% 10%;
    --sidebar-border: 220 13% 91%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
  .dark {
    --background: 0 0% 13%; /* #212121 Dark Gray */
    --foreground: 0 0% 98%; /* Almost White */
    --card: 0 0% 18%; /* #2E2E2E */
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 15%; /* #262626 */
    --popover-foreground: 0 0% 98%;
    --primary: 30 95% 44%; /* #D97706 Deep Orange */
    --primary-foreground: 0 0% 98%; /* White text on primary */
    --secondary: 38 92% 51%; /* #F59E0B Yellow-orange */
    --secondary-foreground: 0 0% 10%; /* Dark text on secondary */
    --muted: 0 0% 25%; /* #404040 */
    --muted-foreground: 0 0% 60%; /* #999999 */
    --accent: 38 92% 51%; /* #F59E0B Yellow-orange for hovers */
    --accent-foreground: 0 0% 10%; /* Dark text on accent */
    --destructive: 0 70% 50%; /* Dark theme red */
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 22%; /* #383838 */
    --input: 0 0% 22%; /* #383838 */
    --ring: 30 95% 44%; /* Primary color for focus rings */
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
    --sidebar-background: 0 0% 10%;
    --sidebar-foreground: 0 0% 95%;
    --sidebar-primary: 30 95% 44%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 38 92% 51%;
    --sidebar-accent-foreground: 0 0% 10%;
    --sidebar-border: 0 0% 20%;
    --sidebar-ring: 30 95% 44%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    /* Removed font-family: Arial, Helvetica, sans-serif; to rely on Next/font */
  }
}

html {
  scroll-behavior: smooth;
}

@layer utilities {
  @keyframes pulseNode {
    0% { opacity: 0.2; transform: scale(0.95); }
    50% { opacity: 0.6; transform: scale(1.05); }
    100% { opacity: 0.2; transform: scale(0.95); }
  }

  .neural-node {
    animation: pulseNode 5s infinite ease-in-out;
    /* SVG's 'r' attribute is not animatable with CSS transform, direct manipulation of 'r' is better if needed but complex in pure CSS for SVG children.
       Pulse effect here is opacity and scale for the whole node container if it were a div. For SVG <circle>, 'r' animation needs to be via SMIL or JS, or we rely on opacity.
       For simplicity, we're animating opacity and can use transform on the circle if desired for scale. Let's stick to opacity via keyframes and allow animationDelay.
    */
    transform-origin: center; /* Ensures scaling happens from the center of the circle */
  }

  @keyframes drawLine {
    0% { stroke-dashoffset: 1000; opacity: 0; }
    30% { stroke-dashoffset: 500; opacity: 0.4; } /* Line partially drawn and visible */
    70% { stroke-dashoffset: 0; opacity: 0.4; }   /* Line fully drawn */
    100% { stroke-dashoffset: -1000; opacity: 0; } /* Line "erases" itself by continuing to move the dash offset */
  }

  .neural-line {
    stroke-dasharray: 1000;
    animation: drawLine 8s infinite linear;
  }
}
